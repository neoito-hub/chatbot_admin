version: "3.8"
services:
  qdrant:
    image: qdrant/qdrant
    container_name: chatbot_qdrant_container
    environment:
      - QDRANT_COLLECTION_NAME=test_collection_1
    ports:
      - "6333:6333"
      - "6334:6334"

  postgres:
    image: postgres:latest
    container_name: chatbot_postgres_container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./packages/shield/pg-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-h",
          "localhost",
          "-p",
          "5432",
          "-q",
          "-U",
          "postgres",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    container_name: chatbot_redis_container
    ports:
      - "6378:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  chatbot:
    image: chatbot
    container_name: chatbot_container
    build:
      context: packages/chatbot
      # target: dev
      dockerfile: Dockerfile
    volumes:
      - ./packages/chatbot:/app
      - /app/node_modules
    ports:
      - "3010:3010"
    depends_on:
      postgres:
        condition: service_healthy

  chatbot-context:
    image: chatbot_context
    container_name: chatbot_context_container
    build:
      context: packages/chatbot-context
      # target: dev
      dockerfile: Dockerfile
    volumes:
      - ./packages/chatbot-context:/app
      - /app/node_modules
    ports:
      - "3011:3011"
    depends_on:
      postgres:
        condition: service_healthy
    command: bash -c "npx prisma generate --schema=./utils/prisma/schema.prisma && npx prisma db push --schema=./utils/prisma/schema.prisma && pm2-runtime start ./ecosystem.config.js"

  shield-go-app:
    build: ./packages/shield
    container_name: chatbot_shield_app_container
    ports:
      - "8080:8080"
      - "8010:8010"
      - "8011:8011"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "go run ./migrator/main.go && go run ./main.go ./packages.go"
